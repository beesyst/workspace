# workspace/.github/workflows/toc.yml
name: Auto Cheatsheets TOC

on:
  push:
    branches: [ main ]
    paths:
      - 'cheatsheets/**/*.md'        # ловим все вложенные md
      - 'README.md'
      - '.github/workflows/toc.yml'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-toc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 1) Сгенерировать TOC внутри всех шпаргалок
      - name: Generate TOC in cheatsheets
        run: |
          npx -y doctoc cheatsheets --github --maxlevel 3 --title "## Оглавление"

      # 2) Вставить сводный TOC в README (свёрнутые <details>)
      - name: Inject cheatsheets TOC into README
        shell: bash
        run: |
          set -euo pipefail
          README="README.md"
          TOC_START="<!-- START:cheatsheets-toc -->"
          TOC_END="<!-- END:cheatsheets-toc -->"

          # соберём новый блок
          {
            echo "${TOC_START}"
            echo
            LC_ALL=C find cheatsheets -type f -name "*.md" | sort | while read -r FILE; do
              REL="$FILE"
              NAME="$(basename "$FILE" .md | sed 's/-/ /g' | sed 's/\b\(.\)/\u\1/g')"
              echo "<details>"
              echo "  <summary><strong><a href=\"$REL\">$NAME</a></strong> — оглавление</summary>"
              echo
              # Вырезаем между START doctoc ... и END doctoc ... (любой текст после слов)
              awk '/<!-- START doctoc/{flag=1;next}/<!-- END doctoc/{flag=0}flag' "$FILE" \
                | sed "s|](#|]($REL#|g"
              echo
              echo "</details>"
              echo
            done
            echo "${TOC_END}"
          } > README.new

          # заменить содержимое между маркерами в README
          awk -v start="${TOC_START}" -v end="${TOC_END}" '
            BEGIN {inblk=0}
            {
              if ($0==start) {print; while (getline l < "README.new") print l; inblk=1; next}
              if ($0==end)   {inblk=0}
              if (!inblk) print
            }
          ' "${README}" > README.tmp && mv README.tmp "${README}"

      # 3) Коммитим, только если есть дифф
      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "docs(toc): auto update cheatsheets TOC"
          file_pattern: |
            README.md
            cheatsheets/**/*.md
