name: Auto Cheatsheets TOC

on:
  workflow_dispatch:          # запуск вручную
  push:
    branches: [ main ]        # или сузить до paths: ['cheatsheets/**', 'README.md']

permissions:
  contents: write
  pull-requests: write        # нужно для создания/обновления PR

jobs:
  update-toc:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 1) Сгенерировать TOC внутри каждой шпаргалки
      - name: Generate TOC in cheatsheets
        run: |
          npx -y doctoc cheatsheets --github --maxlevel 3 --title "## Оглавление"

      # 2) Вставить сводный TOC в README (между маркерами)
      - name: Inject cheatsheets TOC into README
        shell: bash
        run: |
          set -e

          README="README.md"
          TOC_START="<!-- START:cheatsheets-toc -->"
          TOC_END="<!-- END:cheatsheets-toc -->"

          # Собираем ТОЛЬКО контент (без собственных маркеров)
          : > CONTENT.tmp
          find cheatsheets -type f -name "*.md" | sort | while read FILE; do
            REL="$FILE"
            NAME="$(basename "$FILE" .md | sed 's/-/ /g' | sed 's/\b\(.\)/\u\1/g')"

            {
              echo "<details>"
              echo "  <summary><strong><a href=\"$REL\">$NAME</a></strong> — оглавление</summary>"
              echo
              awk '/<!-- START doctoc -->/{flag=1;next}/<!-- END doctoc -->/{flag=0}flag' "$FILE" \
                | sed "s|](#|]($REL#|g"
              echo
              echo "</details>"
              echo
            } >> CONTENT.tmp
          done

          # Подменяем блок в README
          awk -v start="$TOC_START" -v end="$TOC_END" '
            BEGIN {inblk=0}
            $0==start {print; while ((getline line < "CONTENT.tmp") > 0) print line; inblk=1; next}
            $0==end   {inblk=0; print; next}
            !inblk    {print}
          ' "$README" > README.tmp && mv README.tmp "$README"

      # 3) Определить — есть ли изменения
      - name: Detect changes
        id: diff
        run: |
          if git diff --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            git add -A
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      # 4) Создать/обновить PR с апдейтом TOC (вместо прямого пуша в main)
      - name: Create/Update PR
        if: steps.diff.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          branch: bot/toc-update
          title: "docs: update TOC"
          commit-message: "docs(toc): auto-update TOC"
          body: "This PR updates generated tables of contents in cheatsheets and README."
          labels: docs, automation, toc
          signoff: false
