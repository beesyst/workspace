name: Auto Cheatsheets TOC

on:
  push:
    branches: [ main ]
    paths:
      - 'cheatsheets/**/*.md'
      - 'README.md'
      - '.github/workflows/toc.yml'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-toc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 1) Гарантируем плейсхолдеры <!-- START doctoc --> <!-- END doctoc -->
      #    (после первого H1 в каждой шпаргалке)
      - name: Ensure doctoc placeholders exist after first H1
        shell: bash
        run: |
          set -euo pipefail
          mapfile -t FILES < <(find cheatsheets -type f -name '*.md' | sort)
          for FILE in "${FILES[@]}"; do
            if ! grep -q "<!-- START doctoc" "$FILE"; then
              awk '
                BEGIN{placed=0}
                placed==0 && /^# / {
                  print
                  print ""
                  print "<!-- START doctoc -->"
                  print "<!-- END doctoc -->"
                  print ""
                  placed=1
                  next
                }
                { print }
              ' "$FILE" > "$FILE.tmp" && mv "$FILE.tmp" "$FILE"
            fi
          done

      # 2) Генерим TOC ПРЯМО В ФАЙЛАХ шпаргалок
      - name: Generate TOC inside cheatsheets (in-place)
        run: npx -y doctoc cheatsheets --github --maxlevel 3 --title "## Оглавление"

      # 3) Сборка сворачиваемых списков в README
      - name: Inject cheatsheets TOC into README (collapsible)
        shell: bash
        run: |
          set -euo pipefail
          README="README.md"
          TOC_START="<!-- START:cheatsheets-toc -->"
          TOC_END="<!-- END:cheatsheets-toc -->"
          ANCHOR_RE='^###[[:space:]]+Шпаргалки[[:space:]]+\(`cheatsheets/`\)$'

          # если маркеров нет — вставим их сразу после заголовка "Шпаргалки (cheatsheets/)"
          if ! grep -q "$TOC_START" "$README"; then
            awk -v anchor_re="$ANCHOR_RE" -v s="$TOC_START" -v e="$TOC_END" '
              BEGIN{inserted=0}
              {
                print
                if (!inserted && $0 ~ anchor_re) {
                  print ""
                  print s
                  print e
                  print ""
                  inserted=1
                }
              }
              END{
                if (!inserted) {
                  print ""
                  print s
                  print e
                  print ""
                }
              }
            ' "$README" > "$README.tmp" && mv "$README.tmp" "$README"
          fi

          TMP="README.new"
          : > "$TMP"
          echo "$TOC_START" >> "$TMP"
          echo >> "$TMP"

          # соберём <details> по всем шпаргалкам
          mapfile -t FILES < <(find cheatsheets -type f -name '*.md' | sort)
          for FILE in "${FILES[@]}"; do
            REL="$FILE"
            TITLE="$(grep -m1 -E '^# ' "$FILE" | sed 's/^# \+//; s/\r$//')"
            [ -z "$TITLE" ] && TITLE="$(basename "$FILE" .md | sed 's/-/ /g; s/^[a-z]/\u&/')"

            # вытащим doctoc-блок; первую строку "## Оглавление" уберём
            TOC_CONTENT="$(
              awk '/<!-- START doctoc/{f=1;next} /<!-- END doctoc/{f=0} f' "$FILE" \
              | sed -E '/^#{1,6}[[:space:]]*(Оглавление|Table of Contents)[[:space:]]*$/Id' \
              | sed -E '1{/^[[:space:]]*$/d;}'
            )"
            {
              echo "<details>"
              printf '  <summary><strong><a href="%s">%s</a></strong></summary>\n\n' "$REL" "$TITLE"
              # префикс якорей ссылкой на файл
              printf '%s\n\n' "$TOC_CONTENT" | sed "s|](#|]($REL#|g"
              echo "</details>"
              echo
            } >> "$TMP"
          done

          echo "$TOC_END" >> "$TMP"

          # заменить содержимое между маркерами
          awk -v start="$TOC_START" -v end="$TOC_END" '
            BEGIN {inblk=0}
            {
              if ($0==start) { print; while ((getline l < "README.new") > 0) print l; inblk=1; next }
              if ($0==end)   { inblk=0; next }
              if (!inblk) print
            }
          ' "$README" > "$README.tmp" && mv "$README.tmp" "$README"

      # 4) Коммитим и README.md, и изменённые шпаргалки
      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "docs(toc): auto update cheatsheets TOC"
          file_pattern: |
            cheatsheets/**/*.md
            README.md
